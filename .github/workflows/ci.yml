name: CI - Build and Test

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/districtnet

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create .env for Docker Compose
        run: |
          echo "POSTGRES_USER=${{ secrets.DB_USERNAME }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "POSTGRES_DB=districtnet" >> .env

      - name: Create .env for Spring Boot
        run: |
          mkdir -p modules/api/src/main/resources
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}" >> modules/api/src/main/resources/.env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}" >> modules/api/src/main/resources/.env
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/districtnet" >> modules/api/src/main/resources/.env

      - name: Start services with Docker Compose
        run: docker-compose up -d

      - name: Wait for Postgres to be ready
        run: |
          until docker exec $(docker ps -qf "name=db") pg_isready -U ${{ secrets.DB_USERNAME }}; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Stop Docker Compose
        run: docker-compose down
